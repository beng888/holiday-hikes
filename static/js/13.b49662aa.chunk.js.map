{"version":3,"sources":["components/utils/FileUpload.js","components/utils/ImgUpload.js","components/views/UploadProductPage/UploadProductPage.js"],"names":["FileUpload","props","useState","Images","setImages","className","onDrop","files","formData","FormData","append","Axios","post","header","then","response","data","success","image","refreshFunction","alert","multiple","maxSize","getRootProps","getInputProps","PlusOutlined","style","fontSize","display","maxWidth","height","margin","overflowX","map","index","onClick","currentIndex","indexOf","newImages","splice","onDelete","src","alt","registerPlugin","FilePondPluginFileValidateSize","ImgUpload","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateType","FilePondPluginFileEncode","FilePondPluginImageResize","Title","Typography","TextArea","Input","Regions","key","value","Difficulty","Duration","UploadProductPage","TitleValue","setTitleValue","LocationValue","setLocationValue","DescriptionValue","setDescriptionValue","DetailsValue","setDetailsValue","TobringValue","setTobringValue","ItineraryValue","setItineraryValue","PriceValue","setPriceValue","ElevationValue","setElevationValue","TotalElevationValue","setTotalElevationValue","RegionValue","setRegionValue","DifficultyValue","setDifficultyValue","DurationValue","setDurationValue","img","setImg","console","log","onSubmit","event","preventDefault","variables","writer","user","userData","_id","title","description","details","tobring","itinerary","price","elevation","totalelevation","images","regions","difficulty","duration","location","history","push","background","padding","textAlign","level","htmlFor","id","onChange","currentTarget","type","onupdatefiles","allowMultiple","maxFiles","dropOnPage","dropValidation","acceptedFileTypes","name","labelIdle","flexWrap","item"],"mappings":"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","file":"static/js/13.b49662aa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\n\r\nfunction FileUpload(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const onDrop = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n    //save the Image we chose inside the Node Server\r\n    Axios.post(\"/api/product/uploadImage\", formData, config).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.image]);\r\n          props.refreshFunction([...Images, response.data.image]);\r\n        } else {\r\n          alert(\"Failed to save the Image to Server\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n  return (\r\n    <div className=\"dropzoneContainer\">\r\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <PlusOutlined style={{ fontSize: \"3rem\" }} />\r\n            <h3>Upload Image/s</h3>\r\n            <p>\r\n              ( .jpg and .png\r\n              <br /> extensions only)\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          maxWidth: \"300px\",\r\n          height: \"240px\",\r\n          margin: \"auto\",\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {Images.map((image, index) => (\r\n          <div className=\"uploadImageContainer\" onClick={() => onDelete(image)}>\r\n            <img\r\n              className=\"uploadImage\"\r\n              src={`http://localhost:5000/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n            <h3 className=\"delete\">Click to Delete</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React, { useState } from \"react\";\r\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\r\n\r\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nregisterPlugin(FilePondPluginFileValidateSize);\r\n\r\nfunction ImgUpload(props: FileUploaderProps) {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <FilePond\r\n        files={files}\r\n        onupdatefiles={setFiles}\r\n        allowMultiple={false}\r\n        dropOnPage\r\n        server={{\r\n          process: {\r\n            url: \"/api/product/uploadProduct\",\r\n            headers: {\r\n              Authorization: `Bearer eyJH18ui0...`,\r\n            },\r\n            // ondata: (formData) => {\r\n            //   formData.append(\"extraField\", value);\r\n            //   return formData;\r\n            // },\r\n            onload: () => {\r\n              props.onUploadComplete();\r\n            },\r\n          },\r\n        }}\r\n        name=\"files\"\r\n        dropOnPage\r\n        dropValidation\r\n        acceptedFileTypes={props.fileTypes}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ImgUpload;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Typography } from \"antd\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\nimport Axios from \"axios\";\r\nimport \"./UploadProduct.css\";\r\nimport ImgUpload from \"../../utils/ImgUpload\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\n// Import React FilePond\r\nimport { FilePond, File, registerPlugin } from \"react-filepond\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport { setOptions } from \"filepond\";\r\n\r\n// Register the plugins\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileValidateSize,\r\n  FilePondPluginFileValidateType,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Regions = [\r\n  { key: 1, value: \"Region I – Ilocos Region\" },\r\n  { key: 2, value: \"Region II – Cagayan Valley\" },\r\n  { key: 3, value: \"Region III – Central Luzon\" },\r\n  { key: 4, value: \"Region IV‑A – CALABARZON\" },\r\n  { key: 5, value: \"MIMAROPA Region\" },\r\n  { key: 6, value: \"Region V – Bicol Region\" },\r\n  { key: 7, value: \"Region VI – Western Visayas\" },\r\n  { key: 8, value: \"Region VII – Central Visayas\" },\r\n  { key: 9, value: \"Region VIII – Eastern Visayas\" },\r\n  { key: 10, value: \"Region IX – Zamboanga Peninsula\" },\r\n  { key: 11, value: \"Region X – Northern Mindanao\" },\r\n  { key: 12, value: \"Region XI – Davao Region\" },\r\n  { key: 13, value: \"Region XII – SOCCSKSARGEN\" },\r\n  { key: 14, value: \"Region XIII – Caraga\" },\r\n  { key: 15, value: \"NCR – National Capital Region\" },\r\n  { key: 16, value: \"CAR – Cordillera Administra...\" },\r\n  { key: 17, value: \"ARMM – Autonomous Region in...\" },\r\n];\r\n\r\nconst Difficulty = [\r\n  { key: 1, value: \"very easy (1/10)\" },\r\n  { key: 2, value: \"very easy (2/10)\" },\r\n  { key: 3, value: \"easy (3/10)\" },\r\n  { key: 4, value: \"easy (4/10)\" },\r\n  { key: 5, value: \"moderate (5/10)\" },\r\n  { key: 6, value: \"moderate (6/10)\" },\r\n  { key: 7, value: \"challenging (7/10)\" },\r\n  { key: 8, value: \"challenging (8/10)\" },\r\n  { key: 9, value: \"extreme  (9/10)\" },\r\n  { key: 10, value: \"extreme  (10/10)\" },\r\n];\r\n\r\nconst Duration = [\r\n  { key: 1, value: \"1 day\" },\r\n  { key: 2, value: \"2 days\" },\r\n  { key: 3, value: \"3 days\" },\r\n  { key: 4, value: \"4 days\" },\r\n  { key: 5, value: \"5 days\" },\r\n  { key: 6, value: \"6 days\" },\r\n  { key: 7, value: \"7 days\" },\r\n  { key: 8, value: \"8 days\" },\r\n  { key: 9, value: \"9 days\" },\r\n  { key: 10, value: \"10 days\" },\r\n];\r\n\r\nfunction UploadProductPage(props) {\r\n  const [TitleValue, setTitleValue] = useState(\"\");\r\n  const [LocationValue, setLocationValue] = useState(\"\");\r\n  const [DescriptionValue, setDescriptionValue] = useState(\"\");\r\n  const [DetailsValue, setDetailsValue] = useState(\"\");\r\n  const [TobringValue, setTobringValue] = useState(\"\");\r\n  const [ItineraryValue, setItineraryValue] = useState(\"\");\r\n  const [PriceValue, setPriceValue] = useState(0);\r\n  const [ElevationValue, setElevationValue] = useState(0);\r\n  const [TotalElevationValue, setTotalElevationValue] = useState(0);\r\n  const [RegionValue, setRegionValue] = useState(1);\r\n  const [DifficultyValue, setDifficultyValue] = useState(1);\r\n  const [DurationValue, setDurationValue] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n  const [img, setImg] = useState([]);\r\n  //  const [files, setFiles] = useState<File[]>([]);\r\n\r\n  console.log(img);\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitleValue(event.currentTarget.value);\r\n  };\r\n  const onLocationChange = (event) => {\r\n    setLocationValue(event.currentTarget.value);\r\n  };\r\n  const onDescriptionChange = (event) => {\r\n    setDescriptionValue(event.currentTarget.value);\r\n  };\r\n  const onDetailsChange = (event) => {\r\n    setDetailsValue(event.currentTarget.value);\r\n  };\r\n  const onTobringChange = (event) => {\r\n    setTobringValue(event.currentTarget.value);\r\n  };\r\n  const onItineraryChange = (event) => {\r\n    setItineraryValue(event.currentTarget.value);\r\n  };\r\n  const onPriceChange = (event) => {\r\n    setPriceValue(event.currentTarget.value);\r\n  };\r\n  const onElevationChange = (event) => {\r\n    setElevationValue(event.currentTarget.value);\r\n  };\r\n  const onTotalElevationChange = (event) => {\r\n    setTotalElevationValue(event.currentTarget.value);\r\n  };\r\n  const onRegionselectChange = (event) => {\r\n    setRegionValue(event.currentTarget.value);\r\n  };\r\n  const onDifficultySelectChange = (event) => {\r\n    setDifficultyValue(event.currentTarget.value);\r\n  };\r\n  const onDurationSelectChange = (event) => {\r\n    setDurationValue(event.currentTarget.value);\r\n  };\r\n  const updateImages = (newImages) => {\r\n    console.log(newImages);\r\n    setImages(newImages);\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      !TitleValue ||\r\n      !LocationValue ||\r\n      !DescriptionValue ||\r\n      !DetailsValue ||\r\n      !TobringValue ||\r\n      !ItineraryValue ||\r\n      !PriceValue ||\r\n      !ElevationValue ||\r\n      !TotalElevationValue ||\r\n      !RegionValue ||\r\n      !DifficultyValue ||\r\n      !DurationValue ||\r\n      !Images\r\n    ) {\r\n      return alert(\"Fill all Fields\");\r\n    }\r\n\r\n    const variables = {\r\n      writer: props.user.userData._id,\r\n      title: TitleValue,\r\n      description: DescriptionValue,\r\n      details: DetailsValue,\r\n      tobring: TobringValue,\r\n      itinerary: ItineraryValue,\r\n      price: PriceValue,\r\n      elevation: ElevationValue,\r\n      totalelevation: TotalElevationValue,\r\n      images: Images,\r\n      regions: RegionValue,\r\n      difficulty: DifficultyValue,\r\n      duration: DurationValue,\r\n      location: LocationValue,\r\n      img: img,\r\n    };\r\n\r\n    Axios.post(\"/api/product/uploadProduct\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"Product Updloaded\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"failed to  upload product\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"UploadProductPage\"\r\n      style={{\r\n        maxWidth: \"700px\",\r\n        margin: \"100px auto\",\r\n        background: \"#fff\",\r\n        padding: \"1rem\",\r\n      }}\r\n    >\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Title level={2}></Title>\r\n        <h2>Upload Travel Product</h2>\r\n      </div>\r\n\r\n      <Form onSubmit={onSubmit} style={{ textAlign: \"center\" }}>\r\n        <FileUpload refreshFunction={updateImages} />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"title\">Title</label>\r\n        <Input id=\"title\" onChange={onTitleChange} value={TitleValue} />\r\n        <br />\r\n        <br />\r\n        {/* <ImgUpload /> */}\r\n        <FilePond\r\n          type=\"file\"\r\n          // stylePanelAspectRatio={150 / 100}\r\n          // imageResizeTargetWidth={100}\r\n          // imageResizeTargetHeight={150}\r\n          files={img}\r\n          // allowFileEncode\r\n          onupdatefiles={setImg}\r\n          allowMultiple={true}\r\n          maxFiles={3}\r\n          dropOnPage\r\n          dropValidation\r\n          acceptedFileTypes=\"image/jpeg, image/png\"\r\n          // server={{\r\n          //   url: \"/api/product/uploadProduct\",\r\n          //   load: (source, load, error, progress, abort, headers) => {\r\n          //     let filesRequest = new Request(source);\r\n          //     console.log(source);\r\n          //     fetch(source).then(function (response) {\r\n          //       console.log(response.json);\r\n          //       response.blob().then(function (myBlob) {\r\n          //         load(myBlob);\r\n          //       });\r\n          //     });\r\n          //   },\r\n          // }}\r\n          // acceptedFileTypes={props.fileTypes}\r\n          // server=\"/api/product/uploadProduct\"\r\n          name=\"img\"\r\n          labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n        />\r\n\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"location\">Location</label>\r\n        <Input\r\n          id=\"location\"\r\n          onChange={onLocationChange}\r\n          value={LocationValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"price\">Package Rate (₱)</label>\r\n        <Input\r\n          id=\"price\"\r\n          onChange={onPriceChange}\r\n          value={PriceValue}\r\n          type=\"number\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"elevation\">Elevation (MASL)</label>\r\n        <Input\r\n          id=\"elevation\"\r\n          onChange={onElevationChange}\r\n          value={ElevationValue}\r\n          type=\"number\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"totalElevation\">Total Elevation Gain (meters)</label>\r\n        <Input\r\n          id=\"totalElevation\"\r\n          onChange={onTotalElevationChange}\r\n          value={TotalElevationValue}\r\n          type=\"number\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"description\">Description</label>\r\n        <TextArea\r\n          id=\"description\"\r\n          onChange={onDescriptionChange}\r\n          value={DescriptionValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"details\">Important Details</label>\r\n        <TextArea\r\n          id=\"details\"\r\n          onChange={onDetailsChange}\r\n          value={DetailsValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"itinerary\">Detailed Itinerary</label>\r\n        <TextArea\r\n          id=\"itinerary\"\r\n          onChange={onItineraryChange}\r\n          value={ItineraryValue}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"tobring\">Things to Bring</label>\r\n        <TextArea\r\n          id=\"tobring\"\r\n          onChange={onTobringChange}\r\n          value={TobringValue}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <select onChange={onRegionselectChange}>\r\n            {Regions.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select onChange={onDifficultySelectChange}>\r\n            {Difficulty.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select onChange={onDurationSelectChange}>\r\n            {Duration.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <Button type=\"primary\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n"],"sourceRoot":""}