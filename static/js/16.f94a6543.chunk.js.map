{"version":3,"sources":["components/views/CartPage/Sections/UserCardBlock.js","components/utils/Paypal.js","components/views/CartPage/CartPage.js"],"names":["UserCardBlock","props","renderCartImage","images","length","image","products","map","product","key","_id","style","marginBottom","border","boxShadow","minHeight","sm","lg","width","height","alt","src","xs","padding","paddingBottom","title","location","price","toString","replace","span","offset","whiteSpace","quantity","type","onClick","removeItem","Paypal","total","this","toPay","env","client","sandbox","production","currency","onError","err","console","log","onSuccess","payment","onCancel","data","size","color","shape","label","React","Component","CartPage","dispatch","useDispatch","useState","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","useEffect","cartItems","user","userData","cart","forEach","item","push","id","getCartItems","then","response","payload","calculateTotal","cartDetail","parseInt","display","alignItems","margin","maxWidth","gutter","productId","removeCartItem","position","justify","onSuccessBuy","paymentData","success","transactionError","transactionCanceled","to","marginTop","textAlign","status","flexDirection","justifyContent","description"],"mappings":"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","file":"static/js/16.f94a6543.chunk.js","sourcesContent":["import { Button, Col, Row } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction UserCardBlock(props) {\r\n  const renderCartImage = (images) => {\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return `http://localhost:5000/${image}`;\r\n    }\r\n  };\r\n  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  }\r\n\r\n  const renderItems = () =>\r\n    props.products &&\r\n    props.products.map((product) => (\r\n      <Row\r\n        key={product._id}\r\n        style={{\r\n          marginBottom: \"1rem\",\r\n          border: \"1px solid #ddd\",\r\n          boxShadow: \"0 0 10px rgba(0,0,0,0.4)\",\r\n          minHeight: \"169px\",\r\n        }}\r\n      >\r\n        <Col sm={12} lg={8}>\r\n          <img\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            alt=\"product\"\r\n            src={renderCartImage(product.images)}\r\n          />\r\n        </Col>\r\n        <Col sm={12} lg={16}>\r\n          <Row>\r\n            <Col\r\n              xs={24}\r\n              lg={12}\r\n              style={{ padding: \"1rem\", paddingBottom: \"0\" }}\r\n            >\r\n              <p>{product.title} </p>\r\n              <p>{product.location} </p>\r\n              <p>â‚± {formatNumber(`${product.price}`)} </p>\r\n            </Col>\r\n            <Col\r\n              xs={24}\r\n              lg={{ span: 8, offset: 4 }}\r\n              style={{ padding: \"1rem\", whiteSpace: \"nowrap\" }}\r\n            >\r\n              <div>\r\n                {\" \"}\r\n                <span>Qty: {product.quantity}&nbsp;</span>{\" \"}\r\n                <Button\r\n                  type=\"danger\"\r\n                  onClick={() => props.removeItem(product._id)}\r\n                >\r\n                  Remove{\" \"}\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      {renderItems()}\r\n      {/* <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product Image</th>\r\n            <th>Product Name</th>\r\n            <th>Product Quantity</th>\r\n            <th>Product Price</th>\r\n            <th>Remove from Cart</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderItems()}</tbody>\r\n      </table> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCardBlock;\r\n","import React from \"react\";\r\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\r\n\r\nexport default class Paypal extends React.Component {\r\n  render() {\r\n    const onSuccess = (payment) => {\r\n      // Congratulation, it came here means everything's fine!\r\n      console.log(\"The payment was succeeded!\", payment);\r\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n      this.props.onSuccess(payment);\r\n    };\r\n\r\n    const onCancel = (data) => {\r\n      // User pressed \"cancel\" or close Paypal's popup!\r\n      console.log(\"The payment was cancelled!\", data);\r\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n    };\r\n\r\n    const onError = (err) => {\r\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n      console.log(\"Error!\", err);\r\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n    };\r\n\r\n    let env = \"sandbox\"; // you can set here to 'production' for production\r\n    let currency = \"PHP\"; // or you can set this value from your props or state\r\n    let total = this.props.toPay; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n    const client = {\r\n      sandbox:\r\n        \"AQjWqRgR6r2E0wM-H6VC-Wx5ehiU0BqzWyD4eOa0M5mz-7EPOjb-rvTKPnfzq29XIgpjAWSW2NcoPpfP\",\r\n      production: \"YOUR-PRODUCTION-APP-ID\",\r\n    };\r\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n    // For production app-ID:\r\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n    return (\r\n      <PaypalExpressBtn\r\n        env={env}\r\n        client={client}\r\n        currency={currency}\r\n        total={total}\r\n        onError={onError}\r\n        onSuccess={onSuccess}\r\n        onCancel={onCancel}\r\n        style={{\r\n          size: \"responsive\",\r\n          color: \"blue\",\r\n          shape: \"pill\",\r\n          label: \"checkout\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getCartItems,\r\n  removeCartItem,\r\n  onSuccessBuy,\r\n} from \"../../../_actions/user_actions\";\r\nimport UserCardBlock from \"./Sections/UserCardBlock\";\r\nimport { Result, Empty, Row, Col, Button } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport Paypal from \"../../utils/Paypal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CartPage(props) {\r\n  const dispatch = useDispatch();\r\n  const [Total, setTotal] = useState(0);\r\n  const [ShowTotal, setShowTotal] = useState(false);\r\n  const [ShowSuccess, setShowSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let cartItems = [];\r\n    if (props.user.userData && props.user.userData.cart) {\r\n      if (props.user.userData.cart.length > 0) {\r\n        props.user.userData.cart.forEach((item) => {\r\n          cartItems.push(item.id);\r\n        });\r\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(\r\n          (response) => {\r\n            if (response.payload.length > 0) {\r\n              calculateTotal(response.payload);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [props.user.userData]);\r\n\r\n  const calculateTotal = (cartDetail) => {\r\n    let total = 0;\r\n\r\n    cartDetail.map((item) => {\r\n      total += parseInt(item.price, 10) * item.quantity;\r\n    });\r\n\r\n    setTotal(total);\r\n    setShowTotal(true);\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    dispatch(removeCartItem(productId)).then((response) => {\r\n      if (response.payload.cartDetail.length <= 0) {\r\n        setShowTotal(false);\r\n      } else {\r\n        calculateTotal(response.payload.cartDetail);\r\n      }\r\n    });\r\n  };\r\n\r\n  const transactionSuccess = (data) => {\r\n    dispatch(\r\n      onSuccessBuy({\r\n        cartDetail: props.user.cartDetail,\r\n        paymentData: data,\r\n      })\r\n    ).then((response) => {\r\n      if (response.payload.success) {\r\n        setShowSuccess(true);\r\n        setShowTotal(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const transactionError = () => {\r\n    console.log(\"Paypal error\");\r\n  };\r\n\r\n  const transactionCanceled = () => {\r\n    console.log(\"Transaction canceled\");\r\n  };\r\n  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"5rem auto\",\r\n          maxWidth: \"1200px\",\r\n          padding: \"0 1rem\",\r\n        }}\r\n      >\r\n        {ShowTotal ? (\r\n          <div>\r\n            <h1>Here's What You're Getting!</h1>{\" \"}\r\n            <Row gutter={16}>\r\n              {\" \"}\r\n              <Col xs={24} sm={16}>\r\n                {\" \"}\r\n                <UserCardBlock\r\n                  products={props.user.cartDetail}\r\n                  removeItem={removeFromCart}\r\n                />\r\n              </Col>\r\n              <Col xs={24} sm={8}>\r\n                <div\r\n                  style={{\r\n                    padding: \"1rem\",\r\n                    border: \"1px solid #ddd\",\r\n                    boxShadow: \"0 0 10px rgba(0,0,0,0.4)\",\r\n                    position: \"-webkit-sticky\",\r\n                    position: \"sticky\",\r\n                    top: \"0\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <Row justify=\"space-between\">\r\n                    <h1>Total amount:</h1>\r\n                    <h1> â‚±{formatNumber(`${Total}`)}</h1>{\" \"}\r\n                  </Row>\r\n                  <Paypal\r\n                    toPay={Total}\r\n                    onSuccess={transactionSuccess}\r\n                    transactionError={transactionError}\r\n                    transactionCanceled={transactionCanceled}\r\n                  />\r\n                </div>\r\n              </Col>{\" \"}\r\n              <Link to=\"/search\" style={{ marginTop: \"2rem\" }}>\r\n                {\" \"}\r\n                <h4>&nbsp;{\"<<\"}Continue Booking</h4>\r\n              </Link>\r\n            </Row>\r\n          </div>\r\n        ) : ShowSuccess ? (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Result status=\"success\" title=\"Successfully Purchased Items\" />\r\n            <br />{\" \"}\r\n            <Link to=\"/search\">\r\n              <Button type=\"primary\">Continue Booking</Button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <br />\r\n            <Empty description={false} />\r\n            <p>No Items In the Cart</p>\r\n            <br />\r\n            <Link to=\"/search\">\r\n              <Button type=\"primary\">Book Now</Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* {ShowTotal && (\r\n        <Paypal\r\n          toPay={Total}\r\n          onSuccess={transactionSuccess}\r\n          transactionError={transactionError}\r\n          transactionCanceled={transactionCanceled}\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n"],"sourceRoot":""}