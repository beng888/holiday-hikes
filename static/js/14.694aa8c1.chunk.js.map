{"version":3,"sources":["components/views/PrivateTrips/PrivateTripsForm.js","components/views/PrivateTrips/PrivateTrips.js"],"names":["TextArea","Input","RangePicker","DatePicker","disabledDate","current","moment","endOf","PrivateTripsForm","useState","NameValue","setNameValue","EmailValue","setEmailValue","PhoneValue","setPhoneValue","DestinationValue","setDestinationValue","MessageValue","setMessageValue","DateValue","setDateValue","HikersValue","setHikersValue","Form","useForm","form","onFinish","alert","variables","name","email","phone","destination","message","date","hikers","Axios","post","then","response","data","success","resetFields","gutter","xs","lg","Item","label","title","rules","required","whitespace","onChange","event","currentTarget","value","type","min","max","bordered","allowClear","onSelect","span","htmlType","size","style","margin","width","PrivateTrips","className","justify","align","md","maxWidth","padding","paddingLeft"],"mappings":"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","file":"static/js/14.694aa8c1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./PrivateTrips.css\";\r\nimport moment from \"moment\";\r\n\r\nimport Axios from \"axios\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Tooltip,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport { set } from \"mongoose\";\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction disabledDate(current) {\r\n  // Can not select days before today and today\r\n  return current && current < moment().endOf(\"day\");\r\n}\r\n\r\nfunction PrivateTripsForm() {\r\n  const [NameValue, setNameValue] = useState(\"\");\r\n  const [EmailValue, setEmailValue] = useState(\"\");\r\n  const [PhoneValue, setPhoneValue] = useState(\"\");\r\n  const [DestinationValue, setDestinationValue] = useState(\"\");\r\n  const [MessageValue, setMessageValue] = useState(\"\");\r\n  const [DateValue, setDateValue] = useState(null);\r\n  const [HikersValue, setHikersValue] = useState(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const onNameChange = (event) => {\r\n    setNameValue(event.currentTarget.value);\r\n  };\r\n  const onEmailChange = (event) => {\r\n    setEmailValue(event.currentTarget.value);\r\n  };\r\n  const onPhoneChange = (event) => {\r\n    setPhoneValue(event.currentTarget.value);\r\n  };\r\n  const onDestinationChange = (event) => {\r\n    setDestinationValue(event.currentTarget.value);\r\n  };\r\n  const onMessageChange = (event) => {\r\n    setMessageValue(event.currentTarget.value);\r\n  };\r\n  const onHikersChange = (event) => {\r\n    setHikersValue(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (\r\n      !NameValue ||\r\n      !EmailValue ||\r\n      !PhoneValue ||\r\n      !DestinationValue ||\r\n      !DateValue ||\r\n      !HikersValue ||\r\n      !MessageValue\r\n    ) {\r\n      return alert(\"Fill all Fields\");\r\n    }\r\n\r\n    const variables = {\r\n      name: NameValue,\r\n      email: EmailValue,\r\n      phone: PhoneValue,\r\n      destination: DestinationValue,\r\n      message: MessageValue,\r\n      date: DateValue,\r\n      hikers: HikersValue,\r\n    };\r\n\r\n    Axios.post(\"/api/message/uploadMessage\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"message Sent\");\r\n      } else {\r\n        alert(\"failed to Send message\");\r\n      }\r\n    });\r\n\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      // onSubmit={onSubmit}\r\n      onFinish={onSubmit}\r\n      form={form}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col xs={24} lg={12}>\r\n          <Form.Item\r\n            name=\"name\"\r\n            label={\r\n              <span>\r\n                Name&nbsp;\r\n                <Tooltip title=\"What do you want us to call you?\">\r\n                  <QuestionCircleOutlined />\r\n                </Tooltip>\r\n              </span>\r\n            }\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your name!\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={onNameChange} value={NameValue} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} lg={12}>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={onEmailChange} value={EmailValue} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} lg={12}>\r\n          {\" \"}\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your phone number!\",\r\n              },\r\n              {\r\n                min: 11,\r\n                message: \"Must be minimum of 11 numbers.\",\r\n              },\r\n              {\r\n                max: 11,\r\n                message: \"Must be maximum of 11 numbers.\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={onPhoneChange} value={PhoneValue} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} lg={12}>\r\n          <Form.Item\r\n            name=\"destination\"\r\n            label={\r\n              <span>\r\n                Destination&nbsp;\r\n                <Tooltip title=\"which mountain you would like to climb?\">\r\n                  <QuestionCircleOutlined />\r\n                </Tooltip>\r\n              </span>\r\n            }\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Destination!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={onDestinationChange} value={DestinationValue} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} lg={12}>\r\n          <Form.Item\r\n            name=\"hiker\"\r\n            label={\r\n              <span>\r\n                Number of Hikers&nbsp;\r\n                <Tooltip title=\"how many are you in the group?\">\r\n                  <QuestionCircleOutlined />\r\n                </Tooltip>\r\n              </span>\r\n            }\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please state how many you are?\",\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              min={1}\r\n              onChange={onHikersChange}\r\n              value={HikersValue}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} lg={12}>\r\n          <Form.Item\r\n            name=\"date\"\r\n            label={<span>Date&nbsp;</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Date!\",\r\n              },\r\n            ]}\r\n          >\r\n            <RangePicker\r\n              bordered\r\n              allowClear\r\n              onSelect={DateValue}\r\n              onChange={setDateValue}\r\n              disabledDate={disabledDate}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          {\" \"}\r\n          <Form.Item\r\n            name=\"message\"\r\n            label=\"Message\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your message!\",\r\n              },\r\n              {\r\n                min: 20,\r\n                message: \"message must be minimum of 20 characters.\",\r\n              },\r\n              {\r\n                max: 200,\r\n                message: \"message must be maximum of 200 characters.\",\r\n              },\r\n            ]}\r\n          >\r\n            <TextArea onChange={onMessageChange} value={MessageValue} />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Button\r\n          // onClick={onSubmit}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          size=\"large\"\r\n          style={{ margin: \"auto\", width: \"200px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default PrivateTripsForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./PrivateTrips.css\";\r\n\r\nimport Axios from \"axios\";\r\nimport { Row, Col } from \"antd\";\r\nimport PrivateTripsFrom from \"./PrivateTripsForm\";\r\n\r\nfunction PrivateTrips() {\r\n  return (\r\n    <div className=\"PrivateTripsContainer\">\r\n      <Row className=\"PrivateTrips\" justify=\"center\" align=\"middle\">\r\n        <Col\r\n          className=\"detailsCol\"\r\n          xs={24}\r\n          md={8}\r\n          style={{ maxWidth: \"500px\", padding: \"1rem\" }}\r\n        >\r\n          <h1>Private and Requested Hikes</h1>\r\n          <hr />\r\n          <h3>\r\n            Itching to do a hike that's not scheduled or not on our list? Want\r\n            an exclusive hike for you or your group? Send us a message with your\r\n            request and we'll help you get to where you want to be.\r\n          </h3>\r\n        </Col>\r\n        <Col\r\n          className=\"formCol\"\r\n          xs={24}\r\n          md={16}\r\n          style={{ paddingLeft: \"1rem\" }}\r\n        >\r\n          {\" \"}\r\n          <h1>\r\n            Want an exclusive trip?\r\n            <br /> Come and contact us!\r\n          </h1>\r\n          <PrivateTripsFrom />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateTrips;\r\n"],"sourceRoot":""}